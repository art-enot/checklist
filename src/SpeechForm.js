import React, { useState } from 'react';
import axios from 'axios';
import Button from 'react-bootstrap/Button';
import Form from 'react-bootstrap/Form';
import InputGroup from 'react-bootstrap/InputGroup';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'


const SpeechForm = () => {
    const [name, setName] = useState('');
    const [subject, setSubject] = useState('');

    const handleSpeechRecognition = (fieldSetter) => {
        const recognition = new window.webkitSpeechRecognition();
        recognition.lang = 'ru-RU';

        recognition.onresult = (event) => {
            const speechResult = event.results[0][0].transcript;
            fieldSetter(speechResult);
        };

        recognition.start();
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await axios.post('http://localhost:5000/api/form', {
                name,
                subject,
            });
            console.log(response.data);
            window.location.reload(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
        } catch (error) {
            console.error(error);
        }
    };

    return (
        // <form onSubmit={handleSubmit}>
        //     <div>
        //         <label>–ò–º—è:</label>
        //         <input
        //             type="text"
        //             value={name}
        //             onChange={(e) => setName(e.target.value)}
        //         />
        //         <button type="button" onClick={() => handleSpeechRecognition(setName)}>
        //             üé§
        //         </button>
        //     </div>
        //     <div>
        //         <label>Email:</label>
        //         <input
        //             type="email"
        //             value={email}
        //             onChange={(e) => setEmail(e.target.value)}
        //         />
        //         <button type="button" onClick={() => handleSpeechRecognition(setEmail)}>
        //             üé§
        //         </button>
        //     </div>
        //     <div>
        //         <label>–°–æ–æ–±—â–µ–Ω–∏–µ:</label>
        //         <textarea
        //             value={message}
        //             onChange={(e) => setMessage(e.target.value)}
        //         ></textarea>
        //         <button type="button" onClick={() => handleSpeechRecognition(setMessage)}>
        //             üé§
        //         </button>
        //     </div>

        // </form>

<div>
<Form onSubmit={handleSubmit}>

<div className="mb-3">
<Form.Label>–§–ò–û –ø—Ä–æ–≤–µ—Ä—è—é—â–µ–≥–æ</Form.Label>
<InputGroup>
<InputGroup.Text id="basic-addon1">  
<Button className="btn-block" variant="secondary" onClick={() => handleSpeechRecognition(setName)}>
<FontAwesomeIcon icon="fa-solid fa-microphone" />
</Button>
</InputGroup.Text>
<Form.Control placeholder="–£–∫–∞–∂–∏—Ç–µ –§–ò–û" type="text" value={name} onChange={(e) => setName(e.target.value)} />
</InputGroup>
<Form.Text className="text-muted">–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –∏–º—è –æ—Ç—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é.</Form.Text>

</div>

<div className="mb-3">
<Form.Label>–û–±—ä–µ–∫—Ç</Form.Label>
<InputGroup>
<InputGroup.Text id="basic-addon1">  
<Button className="btn-block" variant="secondary" onClick={() => handleSpeechRecognition(setSubject)}>
<FontAwesomeIcon icon="fa-solid fa-microphone" />
</Button>
</InputGroup.Text>
<Form.Control placeholder="–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞." type="text" value={subject} onChange={(e) => setSubject(e.target.value)} />
</InputGroup>
<Form.Text className="text-muted">–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è.</Form.Text>
</div>


    <div className="mb-3 d-grid gap-2">
    <Button className="btn-block btn-lg" variant="primary" type="submit">
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫–ª–∏—Å—Ç
    </Button>
    </div>
    </Form>
    
</div>

    );
};

export default SpeechForm;